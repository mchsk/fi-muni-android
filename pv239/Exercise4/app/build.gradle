apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "cz.muni.pv239.marek.exercise4"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "0.9-alpha"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            // passwords and alias are obtained via askForPasswords task
            storeFile file("../${project.property('keystore.file')}")
            storePassword ""
            keyAlias ""
            keyPassword ""
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            applicationIdSuffix ".debug"

        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    // https://medium.com/@mds6058/breaking-down-android-flavor-dimensions-4ea97fbac8a4
    flavorDimensions "version"
    productFlavors {
        demo {
            dimension "version"
            applicationIdSuffix ".demo"
            versionNameSuffix "-demo"
        }
        full {
            dimension "version"
            applicationIdSuffix ".full"
            versionNameSuffix "-full"
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
}

task askForPasswords <<
        {
            def storePass
            def keyAlias
            def keyPass

            def keystorePropertiesFile = new File((String) project.property("keystore.properties"))

            if(project.hasProperty("keystore.properties") && keystorePropertiesFile.exists())
            {
                println "Loading keystore passwords from property file..."
                Properties properties = new Properties()
                properties.load(new FileInputStream(keystorePropertiesFile))
                storePass = properties["keystore.store.password"]
                keyAlias = properties["keystore.key.alias"]
                keyPass = properties["keystore.key.password"]
            }
            else
            {
                println "Getting keystore passwords from user input..."
                storePass = new String(System.console().readPassword("\nStore password: "))
                keyAlias = new String(System.console().readLine("Key alias: "))
                keyPass = new String(System.console().readPassword("Key password: "))
            }

            android.signingConfigs.release.storePassword = storePass
            android.signingConfigs.release.keyAlias = keyAlias
            android.signingConfigs.release.keyPassword = keyPass
        }


tasks.whenTaskAdded
        {
            theTask ->
                //
                if (theTask.name.startsWith("package") && theTask.name.endsWith("Release"))
                {
                    theTask.dependsOn "askForPasswords"
                }
        }